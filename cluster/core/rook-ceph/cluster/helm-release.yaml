---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.rook.io/release
      chart: rook-ceph-cluster
      version: v1.10.0
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  dependsOn:
    - name: rook-ceph
  values:
    resources:
      osd:
        limits:
          #cpu: 100m
          memory: 2G
        requests:
          #cpu: 100m
          memory: 512Mi
    tolerations:
      - key: "storage-node"
        operator: "Exists"
        effect: "NoSchedule"
    monitoring:
      enabled: false
    ingress:
      dashboard:
        # ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "nas"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        host:
          name: "rook.${SECRET_LOCAL_DOMAIN}"
          path: "/"
        tls:
          - hosts:
              - "rook.${SECRET_LOCAL_DOMAIN}"
            secretName: "rook-tls"
    cephClusterSpec:
      placement:
        mon:
          tolerations:
            - effect: NoSchedule
              operator: Exists
        mgr:
          tolerations:
            - effect: NoSchedule
              operator: Exists
      crashCollector:
        disable: false
      mon:
        count: 3
        allowMultiplePerNode: true
      mgr:
        count: 1
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false

      storage:
        useAllNodes: false
        useAllDevices: true
        config:
          osdsPerDevice: "1"
        nodes:
          # - name: "k3s-pi-1"
          #   devices:
          #     - name: "sda"
          - name: "k3s-pi-2"
            resources:
              requests:
                memory: "1G"
            # devices:
            #   - name: "sda3"
          - name: "k3s-pi-3"
            resources:
              requests:
                memory: "1G"
            # devices:
            #   - name: "sda3"
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 2
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystems: []
    # cephObjectStores:
    #   - name: ceph-objectStore
    #     spec:
    #       metadataPool:
    #         failureDomain: host
    #         replicated:
    #           size: 3
    #       dataPool:
    #         failureDomain: host
    #         erasureCoded:
    #           dataChunks: 2
    #           codingChunks: 1
    #       preservePoolsOnDelete: true
    #       gateway:
    #         port: 80
    #         instances: 1
    #     storageClass:
    #       enabled: true
    cephObjectStores:
      - name: ceph-objectstore
        # see https://github.com/rook/rook/blob/master/Documentation/ceph-object-store-crd.md#object-store-settings for available configuration
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 2
          dataPool:
            failureDomain: host
            replicated: 
              size: 2
            # erasureCoded:
            #   dataChunks: 2
            #   codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            # securePort: 443
            # sslCertificateRef:
            instances: 1
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: false
          name: ceph-bucket
          reclaimPolicy: Delete
          # see https://github.com/rook/rook/blob/master/Documentation/ceph-object-bucket-claim.md#storageclass for available configuration

